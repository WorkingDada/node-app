pipeline {
  
  environment {
    dockerimagename = "pttzx/nodeapp"
    dockerImage = ""
  }
  agent any
  stages {
    stage('Parameters'){
      steps {
        properties([parameters([
        choice(name: 'AWSAccountName', choices: ['aella-nonbank-nonprod','aella-bank-nonprod'], description: 'AWS Account Name')
        , string(name: 'CompanyName', description: '', defaultValue: '', trim: true)
        , string(name: 'ProjectName', description: '', defaultValue: '', trim: true)
        , string(name: 'ImagePackageName', description: 'This is same as microservice name<br>Ex1. all - For all ms <br>Ex2. golang-poc - For ms golang-poc <br>Ex3. bat-spring1,golang-poc,kotlin2 - For list of ms', trim: true),
    ])
])
      }
    }
    stage('Checkout Source') {
      steps {
        git branch: 'main', url: 'https://github.com/WorkingDada/node-app.git'
      }
    }

    stage('Build Image') {
      steps{
        script {
          dockerImage = docker.build dockerimagename
        }
      }
    }
    stage('Pushing Image') {
      environment {
        registryCredential = 'docker-credential'
      }
      steps {
        script {
          docker.withRegistry('https://registry.hub.docker.com',registryCredential) {
            dockerImage.push("latest")
          }
        }
      }
    }
    stage('Deploying App to Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "deploymentservice.yml", kubeconfigId: "kubernetes")
        }
      }
    }
  }
}
