pipeline {
  
  environment {
    dockerimagename = "pttzx/nodeapp"
    dockerImage = ""
  }
  agent any
  stages {
    stage('Checkout Source') {
      steps {
        git branch: 'main', url: 'https://github.com/WorkingDada/node-app.git'
      }
    }

    stage('Build Image') {
      steps{
        script {
          dockerImage = docker.build dockerimagename
        }
      }
    }
    stage('Pushing Image') {
      environment {
        registryCredential = 'docker-credential'
      }
      steps {
        script {
          docker.withRegistry('https://registry.hub.docker.com',registryCredential) {
            dockerImage.push("1.0.0-${BUILD_NUMBER}")
          }
        }
      }
    }
    stage('Updating .yaml') {
      steps {
        script{
          def fileContentsTemplate = "${WORKSPACE}/deploymentservice.yml"
          String fileContents = readFile(fileContentsTemplate)
          fileContents = fileContents.replaceAll("##VERSION##","1.0.0-${BUILD_NUMBER}")
          sh "rm -f ${fileContentsTemplate}"
          writeFile file: fileContentsTemplate, text: fileContents
        }
      }
    }
    stage('Creaing namespaces') {
      steps {
        script{
          def dev_namespace = "techx-trainee-dev"
          def staging_namespace = "techx-trainee-staging"
          def prod_namespace = "techx-trainee-prod"
          sh ""
            kubectl create namespace $dev_namespace
            kubectl create namespace $staging_namespace
            kubectl create namespace $prod_namespace
          ""
        }
      }
    }
    stage('Deploying App to Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "deploymentservice.yml", kubeconfigId: "kubernetes")
        }
      }
    }
  }
}
